{"version":3,"sources":["components/FormSubmit/FormSubmit.module.css","components/PhoneList/PhoneList.module.css","components/PhoneItem/PhoneItem.module.css","components/Filter/Filter.module.css","components/FormSubmit/FormSubmit.js","components/PhoneItem/PhoneItem.js","components/PhoneList/PhoneList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","FormSubmit","state","name","number","handleSubmit","e","preventDefault","contacts","id","uuidv4","props","addContact","reset","handleChange","currentTarget","value","setState","this","title","phone","className","css","form","onSubmit","label","description","input","type","pattern","required","onChange","button","Component","propType","PropTypes","string","func","PhoneItem","removeContact","item","text","onClick","createContactList","filterContact","block","list","map","Filter","filter","conteiner","App","contact","checkContact","alert","find","toLowerCase","includes","prevState","localStorage","setItem","JSON","stringify","parse","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.714ef013.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormSubmit_form__26Gy1\",\"label\":\"FormSubmit_label__17Lop\",\"description\":\"FormSubmit_description__1qZ3X\",\"input\":\"FormSubmit_input__1uBmg\",\"button\":\"FormSubmit_button__79XX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PhoneList_block__1-7jH\",\"title\":\"PhoneList_title__3tiqP\",\"list\":\"PhoneList_list__3qE-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PhoneItem_item__3Pg_q\",\"text\":\"PhoneItem_text__1W37N\",\"button\":\"PhoneItem_button__2r4hc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Filter_conteiner__25HJ_\",\"title\":\"Filter_title__2n2JX\",\"input\":\"Filter_input__1OGy4\"};","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from '../FormSubmit/FormSubmit.module.css';\n\nclass FormSubmit extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const contacts = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.addContact(contacts);\n    this.reset();\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { title, phone } = this.props;\n    const { name, number } = this.state;\n\n    return (\n      <form className={css.form} onSubmit={this.handleSubmit}>\n        <label className={css.label}>\n          <p className={css.description}>{title}</p>\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label className={css.label}>\n          <p className={css.description}>{phone}</p>\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nFormSubmit.propType = {\n  title: PropTypes.string,\n  addContact: PropTypes.func,\n  phone: PropTypes.string,\n};\n\nexport default FormSubmit;\n","import PropTypes from 'prop-types';\nimport css from '../PhoneItem/PhoneItem.module.css';\n\nfunction PhoneItem({ id, name, number, removeContact }) {\n  return (\n    <li className={css.item}>\n      <p>{name}</p>: <p className={css.text}>{number}</p>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => removeContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nPhoneItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  removeContact: PropTypes.func,\n};\n\nexport default PhoneItem;\n","import PropTypes from 'prop-types';\nimport css from '../PhoneList/PhoneList.module.css';\nimport PhoneItem from '../PhoneItem/PhoneItem';\n\nfunction createContactList({ title, filterContact, removeContact }) {\n  return (\n    <section className={css.block}>\n      <h2 className={css.title}>{title}</h2>\n      <ul className={css.list}>\n        {filterContact().map(({ id, name, number }) => (\n          <PhoneItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            removeContact={removeContact}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\ncreateContactList.propTypes = {\n  title: PropTypes.string,\n  filterContact: PropTypes.func,\n  removeContact: PropTypes.func,\n};\n\nexport default createContactList;\n","import PropTypes from 'prop-types';\nimport css from '../Filter/Filter.module.css';\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <div className={css.conteiner}>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilter.propType = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport './App.css';\nimport FormSubmit from './components/FormSubmit/FormSubmit';\nimport CreateContactList from './components/PhoneList/PhoneList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    if (JSON.parse(localStorage.getItem('contacts'))) {\n      this.setState({ contacts: JSON.parse(localStorage.getItem('contacts')) });\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = contact => {\n    if (!this.checkContact(contact.name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      alert(`${contact.name} is alredy in contacts`);\n    }\n  };\n\n  checkContact = name => {\n    const { contacts } = this.state;\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  filterContact = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Phonebook</h1>\n        <FormSubmit\n          title={'Name'}\n          phone={'Number'}\n          addContact={this.addContact}\n        />\n        <Filter filter={filter} onChange={this.handleChange} />\n        <CreateContactList\n          filterContact={this.filterContact}\n          title={'Contacts'}\n          removeContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}